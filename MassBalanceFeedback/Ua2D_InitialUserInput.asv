
function [Experiment,CtrlVar,time,dt,MeshBoundaryCoordinates]=Ua2D_InitialUserInput(CtrlVar)


Experiment='MB';
CtrlVar.TimeDependentRun=0 ;  % any of [0|1].  

xd=50e3; xu=-50e3; yl=50e3 ; yr=-50e3;
MeshBoundaryCoordinates=flipud([xu yr ; xd yr ; xd yl ; xu yl]);

CtrlVar.TriNodes=3;   % [3,6,10]
CtrlVar.MeshSize=10e3;
CtrlVar.MeshSizeMin=0.01*CtrlVar.MeshSize;
CtrlVar.MeshSizeMax=CtrlVar.MeshSize;


%%
time=0 ; dt=1; CtrlVar.nTimeSteps=1;
CtrlVar.Restart=0;  CtrlVar.WriteRestartFile=1;

CtrlVar.doplots=1;
CtrlVar.PlotLabels=0 ; CtrlVar.PlotMesh=1; CtrlVar.PlotBCs=1;


CtrlVar.MassBalanceGeometryFeedback=0;  % if mass balance depends on geometry then
                                        % setting this parameter to true has the effect of 
                                        % the mass-balance beeing updated within the non-linear transient-loop.
                                        % In principle this should always be set to true, but in practice this
                                        % feedback can usually be sufficiently well acounted for by updateding 
                                        % mass balance at each and every time step.
CtrlVar.MassBalanceGeometryFeedbackDamping=0;

end
